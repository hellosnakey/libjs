(function($, undefined){       function Tab(el, opt){	   var me = this;	   this.element = $(el);  	   me._processOpt(opt);	   me._initHtml();	   me._render();	   me._bindEvents();	   	}	Tab.prototype = {	    constructor: Tab,		getIndex: function(){		    return this._index;		},		select: function(index){		    if(index >=0 && index < this._items.length){			    this._index = index;				this._render();			}		},		template: "<div class='tab'>" + 		              "<ul class='tab-head clearfix'>" +				      					  "</ul>" +		         					  "<div class='tab-body'>" +					  "</div>"+ 					  		          "</div>",		_processOpt: function(opt){		    this._index = opt['index'] || 0;            this._ev = opt['ev'] || 'click';            if(!opt.items || !opt.items.length){			    throw new Error("No Items!");			}						this._items = opt.items;		},		_select: function(e){		    var target = $(e.target).closest('.tab-item-head')			    ;						if(target.length === 1){			    var className = target[0].className,				index = className.match(/tab-item-head-(\d+)/),				newIndex = parseInt(index[1], 10) || 0;							if(newIndex !== this._index){					this._index = newIndex;					this._render();					this.element.trigger({						type: 'select',						index: this._index					});				}			}			    					},		_render: function(){		    this._tab.find(".tab-item-head").removeClass('head-active');		    this._tab.find(".tab-item-head:eq("+this._index+")").addClass('head-active');			this._tab.find(".tab-item-body").removeClass('body-active');			this._tab.find(".tab-item-body:eq("+this._index+")").addClass('body-active');		},		_initHtml: function(){		    this._tab = $(this.template).appendTo(this.element);			var head = [], body = [], items = this._items;		    for(var i=0, len=items.length; i<len; i++){			    head.push("<li class='tab-item-head tab-item-head-"+i+"'><a href='#' onclick='return false' hidefocus=true>" + items[i].title + "</a></li>");				body.push("<div class='tab-item-body tab-item-body-"+i+"'>" + items[i].content + "</div>");			}			this._tab.find('.tab-head').append(head.join(""));			this._tab.find('.tab-body').append(body.join(""));					},		_bindEvents: function(){		    this._tab.find('.tab-head').on(			   this._ev, $.proxy(this._select, this)			);		},		destroy: function() { 		    this._tab.remove();		}	};	    $.fn.tab = function(opt){	    return new Tab(this, opt);	};	})(window.$, undefined);